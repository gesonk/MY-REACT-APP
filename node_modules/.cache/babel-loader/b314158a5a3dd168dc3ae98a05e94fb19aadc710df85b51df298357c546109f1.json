{"ast":null,"code":"import React from'react';import'./scrollup.css';import{jsx as _jsx}from\"react/jsx-runtime\";const Scrollup=()=>{// When the user scrolls down 560px from the top of the document, show the scrollup button\nwindow.addEventListener('scroll',function(){const scrollup=document.querySelector('.scrollup');if(this.scrollY>=560)scrollup.classList.add('show-scroll');else scrollup.classList.remove('show-scroll');});return/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"scrollup\",children:/*#__PURE__*/_jsx(\"i\",{className:\"uil uil-arrow-up scrollup__icon\"})});};export default Scrollup;","map":{"version":3,"names":["React","jsx","_jsx","Scrollup","window","addEventListener","scrollup","document","querySelector","scrollY","classList","add","remove","href","className","children"],"sources":["E:/site/my-react-app/src/components/scrollup/Scrollup.jsx"],"sourcesContent":["import React from 'react'\r\nimport './scrollup.css'\r\n\r\nconst Scrollup = () => {\r\n    // When the user scrolls down 560px from the top of the document, show the scrollup button\r\n    window.addEventListener('scroll', function () {\r\n        const scrollup = document.querySelector('.scrollup')\r\n        if (this.scrollY >= 560) scrollup.classList.add('show-scroll')\r\n        else scrollup.classList.remove('show-scroll')\r\n    });\r\n  return (\r\n    <a href=\"#\" className=\"scrollup\">\r\n      <i className=\"uil uil-arrow-up scrollup__icon\"></i>\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Scrollup"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,gBAAgB,QAAAC,GAAA,IAAAC,IAAA,yBAEvB,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB;AACAC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAE,UAAY,CAC1C,KAAM,CAAAC,QAAQ,CAAGC,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,CACpD,GAAI,IAAI,CAACC,OAAO,EAAI,GAAG,CAAEH,QAAQ,CAACI,SAAS,CAACC,GAAG,CAAC,aAAa,CAAC,KACzD,CAAAL,QAAQ,CAACI,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC,CACjD,CAAC,CAAC,CACJ,mBACEV,IAAA,MAAGW,IAAI,CAAC,GAAG,CAACC,SAAS,CAAC,UAAU,CAAAC,QAAA,cAC9Bb,IAAA,MAAGY,SAAS,CAAC,iCAAiC,CAAI,CAAC,CAClD,CAAC,CAER,CAAC,CAED,cAAe,CAAAX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}